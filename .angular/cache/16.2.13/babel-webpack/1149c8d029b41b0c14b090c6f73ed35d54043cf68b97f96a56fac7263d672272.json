{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProductService {\n  constructor(httpReq) {\n    this.httpReq = httpReq;\n    this.uri = 'http://localhost:8080/api/products';\n  }\n  getProducts() {\n    return this.httpReq.get(this.uri);\n  }\n  createProduct(product) {\n    return this.httpReq.post(this.apiU);\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { ProductService };","map":{"version":3,"names":["ProductService","constructor","httpReq","uri","getProducts","get","createProduct","product","post","apiU","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Alina\\Desktop\\library\\src\\app\\services\\product\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Product } from '../../interfaces/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private uri: string = 'http://localhost:8080/api/products';\n\n  constructor(private httpReq: HttpClient) {\n  }\n\n  getProducts(): Observable<Product[]> {\n    return this.httpReq.get<Product[]>(this.uri);\n  }\n\n  createProduct(product: Product): Observable<Product> {\n    return this.httpReq.post<Product>(this.apiU);\n  }\n}\n"],"mappings":";;AAKA,MAGaA,cAAc;EAGzBC,YAAoBC,OAAmB;IAAnB,KAAAA,OAAO,GAAPA,OAAO;IAFnB,KAAAC,GAAG,GAAW,oCAAoC;EAG1D;EAEAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,OAAO,CAACG,GAAG,CAAY,IAAI,CAACF,GAAG,CAAC;EAC9C;EAEAG,aAAaA,CAACC,OAAgB;IAC5B,OAAO,IAAI,CAACL,OAAO,CAACM,IAAI,CAAU,IAAI,CAACC,IAAI,CAAC;EAC9C;EAAC,QAAAC,CAAA,G;qBAZUV,cAAc,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdf,cAAc;IAAAgB,OAAA,EAAdhB,cAAc,CAAAiB,IAAA;IAAAC,UAAA,EAFb;EAAM;;SAEPlB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}