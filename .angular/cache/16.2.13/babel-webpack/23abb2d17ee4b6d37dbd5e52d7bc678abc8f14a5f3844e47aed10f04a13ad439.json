{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/components/login/login.component\";\nclass RegisterService {\n  constructor(http, login) {\n    this.http = http;\n    this.login = login;\n    this.apiUrl = 'http://localhost:8080/api/register';\n    this.login = false;\n  }\n  registerUser(user) {\n    return this.http.post(this.apiUrl, user);\n  }\n  static #_ = this.ɵfac = function RegisterService_Factory(t) {\n    return new (t || RegisterService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LoginComponent));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RegisterService,\n    factory: RegisterService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { RegisterService };","map":{"version":3,"names":["RegisterService","constructor","http","login","apiUrl","registerUser","user","post","_","i0","ɵɵinject","i1","HttpClient","i2","LoginComponent","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Alina\\Desktop\\library\\src\\app\\services\\register\\register.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LoginComponent } from 'src/app/components/login/login.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n  apiUrl = 'http://localhost:8080/api/register';\n  login= false;\n\n  constructor(private http: HttpClient, private login: LoginComponent) { }\n\n  registerUser(user: any) {\n    return this.http.post<any>(this.apiUrl, user);\n  }\n  \n}\n"],"mappings":";;;AAIA,MAGaA,eAAe;EAI1BC,YAAoBC,IAAgB,EAAUC,KAAqB;IAA/C,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,KAAK,GAALA,KAAK;IAHnD,KAAAC,MAAM,GAAG,oCAAoC;IAC7C,KAAAD,KAAK,GAAE,KAAK;EAE2D;EAEvEE,YAAYA,CAACC,IAAS;IACpB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAM,IAAI,CAACH,MAAM,EAAEE,IAAI,CAAC;EAC/C;EAAC,QAAAE,CAAA,G;qBARUR,eAAe,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAff,eAAe;IAAAgB,OAAA,EAAfhB,eAAe,CAAAiB,IAAA;IAAAC,UAAA,EAFd;EAAM;;SAEPlB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}