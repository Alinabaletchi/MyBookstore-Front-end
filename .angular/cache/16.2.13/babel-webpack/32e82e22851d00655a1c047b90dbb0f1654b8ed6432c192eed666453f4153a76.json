{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  login() {\n    this.authService.login({\n      username: this.username,\n      password: this.password\n    }).subscribe(data => {\n      console.log('Login successful');\n      localStorage.setItem('token', data.token); // Save the token to localStorage\n    }, error => {\n      this.errorMessage = 'Failed to login';\n      console.error(error);\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);\nexport { LoginComponent };\n//   user: LoginData = { email: '', password: '' }; // Define a user object for validation\n//   constructor(private loginService: LoginService, private cartService:CartService, private router: Router) { }\n//   login() {\n//     this.loginService.login(this.user.email, this.user.password).subscribe({\n//       next: (response) => {\n//         if (response.status === 200) {\n//           console.log('Login successful');\n//           this.router.navigate(['/home']); // Adjust as needed for your routing setup\n//         } else {\n//           console.error('Login failed');\n//         }\n//       },\n//       error: (error) => {\n//         console.error('Login failed', error);\n//       }\n//     });\n//   }\n// }","map":{"version":3,"names":["Component","LoginComponent","constructor","authService","login","username","password","subscribe","data","console","log","localStorage","setItem","token","error","errorMessage","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Alina\\Desktop\\library\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\nimport { LoginData } from 'src/app/interfaces/login';\nimport { CartService } from 'src/app/services/cart/cart.service';\nimport { LoginService } from 'src/app/services/login/login.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  username: string;\n  password: string;\n  errorMessage: string;\n\n  constructor(private authService: AuthService) {}\n\n  login(): void {\n    this.authService.login({ username: this.username, password: this.password }).subscribe(\n      data => {\n        console.log('Login successful');\n        localStorage.setItem('token', data.token); // Save the token to localStorage\n      },\n      error => {\n        this.errorMessage = 'Failed to login';\n        console.error(error);\n      }\n    );\n  }\n\n//   user: LoginData = { email: '', password: '' }; // Define a user object for validation\n\n//   constructor(private loginService: LoginService, private cartService:CartService, private router: Router) { }\n\n \n//   login() {\n//     this.loginService.login(this.user.email, this.user.password).subscribe({\n//       next: (response) => {\n//         if (response.status === 200) {\n//           console.log('Login successful');\n//           this.router.navigate(['/home']); // Adjust as needed for your routing setup\n//         } else {\n//           console.error('Login failed');\n//         }\n//       },\n//       error: (error) => {\n//         console.error('Login failed', error);\n//       }\n//     });\n//   }\n// }"],"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AAazC,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAKzBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAE/CC,KAAKA,CAAA;IACH,IAAI,CAACD,WAAW,CAACC,KAAK,CAAC;MAAEC,QAAQ,EAAE,IAAI,CAACA,QAAQ;MAAEC,QAAQ,EAAE,IAAI,CAACA;IAAQ,CAAE,CAAC,CAACC,SAAS,CACpFC,IAAI,IAAG;MACLC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC;IAC7C,CAAC,EACDC,KAAK,IAAG;MACN,IAAI,CAACC,YAAY,GAAG,iBAAiB;MACrCN,OAAO,CAACK,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;CAAC;AAlBUb,cAAc,GAAAe,UAAA,EAL1BhB,SAAS,CAAC;EACTiB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWlB,cAAc,CAkBxB;SAlBUA,cAAc;AAoB3B;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}