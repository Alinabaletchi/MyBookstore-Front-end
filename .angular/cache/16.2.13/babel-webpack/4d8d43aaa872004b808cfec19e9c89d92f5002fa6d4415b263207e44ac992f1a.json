{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass WishlistService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/wishlist';\n  }\n  getMyWishlist() {\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + localStorage.getItem('token')\n    });\n    return this.http.get(`${this.apiUrl}/mywishlist`, {\n      headers\n    });\n  }\n  addBookToWishlist(wishlistId, bookId) {\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + localStorage.getItem('token') // Asigură-te că token-ul este corect\n    });\n\n    const params = new HttpParams().set('wishlistId', wishlistId.toString()).set('bookId', bookId.toString());\n    return this.http.patch(`${this.apiUrl}/addBookToCart`, {}, {\n      headers,\n      params\n    });\n  }\n  static #_ = this.ɵfac = function WishlistService_Factory(t) {\n    return new (t || WishlistService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WishlistService,\n    factory: WishlistService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { WishlistService };","map":{"version":3,"names":["HttpHeaders","WishlistService","constructor","http","apiUrl","getMyWishlist","headers","localStorage","getItem","get","addBookToWishlist","wishlistId","bookId","params","HttpParams","set","toString","patch","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Alina\\Desktop\\library\\src\\app\\services\\wishlist\\wishlist.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Game } from 'src/app/interfaces/game';\nimport { Wishlist } from 'src/app/interfaces/wishlist';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WishlistService {\n\n  private apiUrl ='http://localhost:8080/api/wishlist';\n  constructor(private http: HttpClient) {}\n\n  getMyWishlist(): Observable<Wishlist> {\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + localStorage.getItem('token') \n    });\n    return this.http.get<Wishlist>(`${this.apiUrl}/mywishlist`, { headers });\n  }\n\n  addBookToWishlist(wishlistId: number, bookId: number): Observable<Wishlist> {\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + localStorage.getItem('token') // Asigură-te că token-ul este corect\n    });\n    const params = new HttpParams()\n      .set('wishlistId', wishlistId.toString())\n      .set('bookId', bookId.toString());\n    return this.http.patch<Wishlist>(`${this.apiUrl}/addBookToCart`, {}, { headers, params });\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,MAGaC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,MAAM,GAAE,oCAAoC;EACb;EAEvCC,aAAaA,CAAA;IACX,MAAMC,OAAO,GAAG,IAAIN,WAAW,CAAC;MAC9B,eAAe,EAAE,SAAS,GAAGO,YAAY,CAACC,OAAO,CAAC,OAAO;KAC1D,CAAC;IACF,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAW,GAAG,IAAI,CAACL,MAAM,aAAa,EAAE;MAAEE;IAAO,CAAE,CAAC;EAC1E;EAEAI,iBAAiBA,CAACC,UAAkB,EAAEC,MAAc;IAClD,MAAMN,OAAO,GAAG,IAAIN,WAAW,CAAC;MAC9B,eAAe,EAAE,SAAS,GAAGO,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;KAC5D,CAAC;;IACF,MAAMK,MAAM,GAAG,IAAIC,UAAU,EAAE,CAC5BC,GAAG,CAAC,YAAY,EAAEJ,UAAU,CAACK,QAAQ,EAAE,CAAC,CACxCD,GAAG,CAAC,QAAQ,EAAEH,MAAM,CAACI,QAAQ,EAAE,CAAC;IACnC,OAAO,IAAI,CAACb,IAAI,CAACc,KAAK,CAAW,GAAG,IAAI,CAACb,MAAM,gBAAgB,EAAE,EAAE,EAAE;MAAEE,OAAO;MAAEO;IAAM,CAAE,CAAC;EAC3F;EAAC,QAAAK,CAAA,G;qBApBUjB,eAAe,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAftB,eAAe;IAAAuB,OAAA,EAAfvB,eAAe,CAAAwB,IAAA;IAAAC,UAAA,EAFd;EAAM;;SAEPzB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}