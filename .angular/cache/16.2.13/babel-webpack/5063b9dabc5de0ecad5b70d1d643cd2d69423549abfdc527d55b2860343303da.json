{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/login/login.service\";\nimport * as i3 from \"@angular/router\";\nclass LoginComponent {\n  constructor(formBuilder, loginService) {\n    this.formBuilder = formBuilder;\n    this.loginService = loginService;\n    this.user = {\n      email: '',\n      password: ''\n    };\n    this.errorMessage = '';\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  login() {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.get('email')?.value;\n      const password = this.loginForm.get('password')?.value;\n      this.loginService.login({\n        email,\n        password\n      }).subscribe(response => {\n        console.log('Autentificare reușită:', response);\n      }, error => {\n        // Autentificare eșuată, gestionați eroarea aici (de exemplu, afișați un mesaj de eroare)\n        console.error('Eroare de autentificare:', error);\n        this.errorMessage = 'Eroare de autentificare: ' + error.message; // Afișare mesaj de eroare\n      });\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.LoginService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 38,\n    vars: 2,\n    consts: [[1, \"bg-light\", \"py-3\", \"py-md-5\"], [1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-12\", \"col-sm-10\", \"col-md-8\", \"col-lg-6\", \"col-xl-5\", \"col-xxl-4\"], [1, \"card\", \"border\", \"border-light-subtle\", \"rounded-3\", \"shadow-sm\"], [1, \"card-body\", \"p-3\", \"p-md-4\", \"p-xl-5\"], [1, \"text-center\", \"mb-3\"], [1, \"fs-6\", \"fw-normal\", \"text-center\", \"text-secondary\", \"mb-4\"], [1, \"row\", \"gy-2\", \"overflow-hidden\"], [1, \"col-12\"], [1, \"form-floating\", \"mb-3\"], [\"type\", \"email\", \"name\", \"email\", \"id\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"password\", \"name\", \"password\", \"id\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\", 1, \"form-label\"], [1, \"d-flex\", \"gap-2\", \"justify-content-between\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"value\", \"\", \"name\", \"rememberMe\", \"id\", \"rememberMe\", 1, \"form-check-input\"], [\"for\", \"rememberMe\", 1, \"form-check-label\", \"text-secondary\"], [\"href\", \"#!\", 1, \"link-primary\", \"text-decoration-none\"], [1, \"d-grid\", \"my-3\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-lg\", 3, \"click\"], [1, \"m-0\", \"text-secondary\", \"text-center\"], [\"mat-button\", \"\", \"routerLink\", \"/register\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5);\n        i0.ɵɵelement(6, \"div\", 6);\n        i0.ɵɵelementStart(7, \"h2\", 7);\n        i0.ɵɵtext(8, \"Sign in to your account\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"form\")(10, \"div\", 8)(11, \"div\", 9)(12, \"div\", 10)(13, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.user.email = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"label\", 12);\n        i0.ɵɵtext(15, \"Email\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"div\", 9)(17, \"div\", 10)(18, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.user.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"label\", 14);\n        i0.ɵɵtext(20, \"Password\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 9)(22, \"div\", 15)(23, \"div\", 16);\n        i0.ɵɵelement(24, \"input\", 17);\n        i0.ɵɵelementStart(25, \"label\", 18);\n        i0.ɵɵtext(26, \" Keep me logged in \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"a\", 19);\n        i0.ɵɵtext(28, \"Forgot password?\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(29, \"div\", 9)(30, \"div\", 20)(31, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_31_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(32, \"Log in\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(33, \"div\", 9)(34, \"p\", 22);\n        i0.ɵɵtext(35, \"Don't have an account? \");\n        i0.ɵɵelementStart(36, \"a\", 23);\n        i0.ɵɵtext(37, \"Register\");\n        i0.ɵɵelementEnd()()()()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n      }\n    },\n    dependencies: [i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm],\n    styles: [\".container[_ngcontent-%COMP%] {\\n  background: -webkit-linear-gradient(left, cadetblue, #00c6ff);\\n  margin-top: 3%;\\n  padding: 3%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDZEQUFBO0VBQ0EsY0FBQTtFQUNBLFdBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXJ7XHJcbiAgICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudChsZWZ0LGNhZGV0Ymx1ZSAsICMwMGM2ZmYpO1xyXG4gICAgbWFyZ2luLXRvcDogMyU7XHJcbiAgICBwYWRkaW5nOiAzJTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}\nexport { LoginComponent };","map":{"version":3,"names":["Validators","LoginComponent","constructor","formBuilder","loginService","user","email","password","errorMessage","loginForm","group","required","login","valid","get","value","subscribe","response","console","log","error","message","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","LoginService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_input_ngModelChange_13_listener","$event","LoginComponent_Template_input_ngModelChange_18_listener","LoginComponent_Template_button_click_31_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Alina\\Desktop\\library\\src\\app\\components\\login\\login.component.ts","C:\\Users\\Alina\\Desktop\\library\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LoginData } from 'src/app/interfaces/login';\nimport { LoginService } from 'src/app/services/login/login.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n\n  user: LoginData = {\n    email: '',\n    password: ''\n  };\n\n  errorMessage: string = '';\n\n  constructor(private formBuilder: FormBuilder, private loginService: LoginService) {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  login(): void {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.get('email')?.value;\n      const password = this.loginForm.get('password')?.value;\n\n      this.loginService.login({ email, password }).subscribe(\n        response => {\n          \n          console.log('Autentificare reușită:', response);\n          \n        },\n        error => {\n          // Autentificare eșuată, gestionați eroarea aici (de exemplu, afișați un mesaj de eroare)\n          console.error('Eroare de autentificare:', error);\n          this.errorMessage = 'Eroare de autentificare: ' + error.message; // Afișare mesaj de eroare\n        }\n      );\n    }\n  }\n}","<section class=\"bg-light py-3 py-md-5\">\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-12 col-sm-10 col-md-8 col-lg-6 col-xl-5 col-xxl-4\">\n        <div class=\"card border border-light-subtle rounded-3 shadow-sm\">\n          <div class=\"card-body p-3 p-md-4 p-xl-5\">\n            <div class=\"text-center mb-3\">\n              <!-- <a href=\"#!\">\n                <img src=\"src\\assets\\img\\book.png\" alt=\"My library\" width=\"175\" height=\"57\">\n              </a> -->\n            </div>\n            <h2 class=\"fs-6 fw-normal text-center text-secondary mb-4\">Sign in to your account</h2>\n            <form >\n              <div class=\"row gy-2 overflow-hidden\">\n                <div class=\"col-12\">\n                  <div class=\"form-floating mb-3\">\n                    <input type=\"email\" class=\"form-control\" name=\"email\" id=\"email\"  [(ngModel)]=\"user.email\"  required>\n                    <label for=\"email\" class=\"form-label\" >Email</label>\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <div class=\"form-floating mb-3\">\n                    <input type=\"password\" class=\"form-control\" name=\"password\" id=\"password\" [(ngModel)]=\"user.password\"  required>\n                    <label for=\"password\" class=\"form-label\">Password</label>\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <div class=\"d-flex gap-2 justify-content-between\">\n                    <div class=\"form-check\">\n                      <input class=\"form-check-input\" type=\"checkbox\" value=\"\" name=\"rememberMe\" id=\"rememberMe\">\n                      <label class=\"form-check-label text-secondary\" for=\"rememberMe\">\n                        Keep me logged in\n                      </label>\n                    </div>\n                    <a href=\"#!\" class=\"link-primary text-decoration-none\">Forgot password?</a>\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <div class=\"d-grid my-3\">\n                    <button class=\"btn btn-primary btn-lg\" type=\"submit\"  (click)=\"login()\">Log in</button>\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <p class=\"m-0 text-secondary text-center\">Don't have an account? <a mat-button routerLink=\"/register\">Register</a>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}