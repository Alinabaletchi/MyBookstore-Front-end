{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass RegisterService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/register';\n  }\n  registerUser(user) {\n    return this.http.post(this.apiUrl, user);\n  }\n  registerUserAndCreateCart(user) {\n    return this.http.post(this.apiUrl, user).pipe(\n    // După ce utilizatorul este înregistrat cu succes, creăm automat un coș pentru el\n    switchMap(response => {\n      return this.cartService.createCart(response.id).pipe(map(() => response) // Returnăm utilizatorul înregistrat ca parte a răspunsului\n      );\n    }));\n  }\n  static #_ = this.ɵfac = function RegisterService_Factory(t) {\n    return new (t || RegisterService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RegisterService,\n    factory: RegisterService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { RegisterService };","map":{"version":3,"names":["RegisterService","constructor","http","apiUrl","registerUser","user","post","registerUserAndCreateCart","pipe","switchMap","response","cartService","createCart","id","map","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Alina\\Desktop\\library\\src\\app\\services\\register\\register.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n  apiUrl = 'http://localhost:8080/api/register';\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user: any) {\n    return this.http.post<any>(this.apiUrl, user);\n  }\n  registerUserAndCreateCart(user: User): Observable<User> {\n    return this.http.post<User>(this.apiUrl, user)\n      .pipe(\n        // După ce utilizatorul este înregistrat cu succes, creăm automat un coș pentru el\n        switchMap((response: User) => {\n          return this.cartService.createCart(response.id).pipe(\n            map(() => response) // Returnăm utilizatorul înregistrat ca parte a răspunsului\n          );\n        })\n      );\n  }\n}\n"],"mappings":";;AAGA,MAGaA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,MAAM,GAAG,oCAAoC;EAEL;EAExCC,YAAYA,CAACC,IAAS;IACpB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAM,IAAI,CAACH,MAAM,EAAEE,IAAI,CAAC;EAC/C;EACAE,yBAAyBA,CAACF,IAAU;IAClC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,IAAI,CAACH,MAAM,EAAEE,IAAI,CAAC,CAC3CG,IAAI;IACH;IACAC,SAAS,CAAEC,QAAc,IAAI;MAC3B,OAAO,IAAI,CAACC,WAAW,CAACC,UAAU,CAACF,QAAQ,CAACG,EAAE,CAAC,CAACL,IAAI,CAClDM,GAAG,CAAC,MAAMJ,QAAQ,CAAC,CAAC;OACrB;IACH,CAAC,CAAC,CACH;EACL;EAAC,QAAAK,CAAA,G;qBAlBUf,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfpB,eAAe;IAAAqB,OAAA,EAAfrB,eAAe,CAAAsB,IAAA;IAAAC,UAAA,EAFd;EAAM;;SAEPvB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}