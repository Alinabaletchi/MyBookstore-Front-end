{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(formBuilder, loginService, route) {\n    this.formBuilder = formBuilder;\n    this.loginService = loginService;\n    this.route = route;\n    this.user = {\n      email: '',\n      password: ''\n    };\n    this.errorMessage = '';\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  login() {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.get('email')?.value;\n      const password = this.loginForm.get('password')?.value;\n      this.loginService.login({\n        email,\n        password\n      }).subscribe(response => {\n        console.log('Autentificare reușită:', response);\n        this.router.navigate(['/home']);\n      }, error => {\n        console.error('Eroare de autentificare:', error);\n        this.errorMessage = 'Eroare de autentificare: ' + error.message;\n      });\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","Validators","LoginComponent","constructor","formBuilder","loginService","route","user","email","password","errorMessage","loginForm","group","required","login","valid","get","value","subscribe","response","console","log","router","navigate","error","message","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Alina\\Desktop\\library\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Route } from '@angular/router';\nimport { LoginData } from 'src/app/interfaces/login';\nimport { LoginService } from 'src/app/services/login/login.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n\n  user: LoginData = {\n    email: '',\n    password: ''\n  };\n\n  errorMessage: string = '';\n\n  constructor(private formBuilder: FormBuilder, private loginService: LoginService, private route: Route) {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  login(): void {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.get('email')?.value;\n      const password = this.loginForm.get('password')?.value;\n\n      this.loginService.login({ email, password }).subscribe(\n        response => {\n          \n          console.log('Autentificare reușită:', response);\n          this.router.navigate(['/home']);\n          \n        },\n        error => {\n          \n          console.error('Eroare de autentificare:', error);\n          this.errorMessage = 'Eroare de autentificare: ' + error.message; \n        }\n      );\n    }\n  }\n}"],"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAWnE,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAUzBC,YAAoBC,WAAwB,EAAUC,YAA0B,EAAUC,KAAY;IAAlF,KAAAF,WAAW,GAAXA,WAAW;IAAuB,KAAAC,YAAY,GAAZA,YAAY;IAAwB,KAAAC,KAAK,GAALA,KAAK;IAP/F,KAAAC,IAAI,GAAc;MAChBC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX;IAED,KAAAC,YAAY,GAAW,EAAE;IAGvB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACP,WAAW,CAACQ,KAAK,CAAC;MACtCJ,KAAK,EAAE,CAAC,EAAE,EAAE,CAACP,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACO,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CAAC,EAAE,EAAER,UAAU,CAACY,QAAQ;KACnC,CAAC;EACJ;EAEAC,KAAKA,CAAA;IACH,IAAI,IAAI,CAACH,SAAS,CAACI,KAAK,EAAE;MACxB,MAAMP,KAAK,GAAG,IAAI,CAACG,SAAS,CAACK,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK;MAChD,MAAMR,QAAQ,GAAG,IAAI,CAACE,SAAS,CAACK,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK;MAEtD,IAAI,CAACZ,YAAY,CAACS,KAAK,CAAC;QAAEN,KAAK;QAAEC;MAAQ,CAAE,CAAC,CAACS,SAAS,CACpDC,QAAQ,IAAG;QAETC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,QAAQ,CAAC;QAC/C,IAAI,CAACG,MAAM,CAACC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAEjC,CAAC,EACDC,KAAK,IAAG;QAENJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD,IAAI,CAACd,YAAY,GAAG,2BAA2B,GAAGc,KAAK,CAACC,OAAO;MACjE,CAAC,CACF;;EAEL;CACD;AArCYvB,cAAc,GAAAwB,UAAA,EAL1B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACW3B,cAAc,CAqC1B;SArCYA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}