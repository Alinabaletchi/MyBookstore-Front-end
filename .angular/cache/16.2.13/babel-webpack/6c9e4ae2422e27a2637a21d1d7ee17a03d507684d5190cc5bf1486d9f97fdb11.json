{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { UserRole } from 'src/app/interfaces/user';\nlet RegisterComponent = class RegisterComponent {\n  constructor(registerService, cartService, router) {\n    this.registerService = registerService;\n    this.cartService = cartService;\n    this.router = router;\n    this.user = {\n      userId: 0,\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      phoneNumber: '',\n      role: UserRole.USER\n    };\n    this.userRoles = [{\n      label: 'Admin',\n      value: UserRole.ADMIN\n    }, {\n      label: 'User',\n      value: UserRole.USER\n    }];\n  }\n  registerUser() {\n    this.registerService.registerUser(this.user).subscribe(response => {\n      console.log('User registered successfully:', response);\n      // Extrageți userId-ul din răspunsul înregistrării\n      const userId = response.userId;\n      // Trimiteți userId către metoda onCreateCart() din CartComponent\n      this.onCreateCart(userId);\n    }, error => {\n      console.error('Error registering user:', error);\n    });\n  }\n  onCreateCart(userId) {\n    // Apelați metoda din CartService pentru a crea coșul pentru utilizatorul dat\n    this.cartService.createCart(userId).subscribe(response => {\n      console.log('Cart created successfully:', response);\n      // Poți face ceva după ce coșul a fost creat, cum ar fi navigarea către altă pagină\n      this.router.navigate(['/home']); // Exemplu de navigare către pagina principală\n    }, error => {\n      console.error('Error creating cart:', error);\n    });\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"names":["Component","UserRole","RegisterComponent","constructor","registerService","cartService","router","user","userId","firstName","lastName","email","password","phoneNumber","role","USER","userRoles","label","value","ADMIN","registerUser","subscribe","response","console","log","onCreateCart","error","createCart","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Alina\\Desktop\\library\\src\\app\\components\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { RegisterService } from 'src/app/services/register/register.service';\nimport { User, UserRole } from 'src/app/interfaces/user';\nimport { Router } from '@angular/router';\nimport { CartService } from 'src/app/services/cart/cart.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\n\nexport class RegisterComponent {\n\n   \n    user: User = {\n     userId: 0,\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    phoneNumber: '',\n    role:UserRole.USER\n  };\n  userRoles = [\n    { label: 'Admin', value: UserRole.ADMIN },\n    { label: 'User', value: UserRole.USER }\n];\n\n  constructor(private registerService: RegisterService, private cartService: CartService, private router: Router) { }\n  registerUser(): void {\n    this.registerService.registerUser(this.user)\n      .subscribe(\n        (response: User) => {\n          console.log('User registered successfully:', response);\n          // Extrageți userId-ul din răspunsul înregistrării\n          const userId = response.userId;\n          // Trimiteți userId către metoda onCreateCart() din CartComponent\n          this.onCreateCart(userId);\n        },\n        error => {\n          console.error('Error registering user:', error);\n        }\n      );\n  }\n\n  onCreateCart(userId: number): void {\n    // Apelați metoda din CartService pentru a crea coșul pentru utilizatorul dat\n    this.cartService.createCart(userId).subscribe(\n      response => {\n        console.log('Cart created successfully:', response);\n        // Poți face ceva după ce coșul a fost creat, cum ar fi navigarea către altă pagină\n        this.router.navigate(['/home']); // Exemplu de navigare către pagina principală\n      },\n      error => {\n        console.error('Error creating cart:', error);\n      }\n    );\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAAeC,QAAQ,QAAQ,yBAAyB;AAUxD,IAAaC,iBAAiB,GAA9B,MAAaA,iBAAiB;EAiB5BC,YAAoBC,eAAgC,EAAUC,WAAwB,EAAUC,MAAc;IAA1F,KAAAF,eAAe,GAAfA,eAAe;IAA2B,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAdpG,KAAAC,IAAI,GAAS;MACZC,MAAM,EAAE,CAAC;MACVC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,EAAE;MACfC,IAAI,EAACb,QAAQ,CAACc;KACf;IACD,KAAAC,SAAS,GAAG,CACV;MAAEC,KAAK,EAAE,OAAO;MAAEC,KAAK,EAAEjB,QAAQ,CAACkB;IAAK,CAAE,EACzC;MAAEF,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAEjB,QAAQ,CAACc;IAAI,CAAE,CAC1C;EAEmH;EAClHK,YAAYA,CAAA;IACV,IAAI,CAAChB,eAAe,CAACgB,YAAY,CAAC,IAAI,CAACb,IAAI,CAAC,CACzCc,SAAS,CACPC,QAAc,IAAI;MACjBC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,QAAQ,CAAC;MACtD;MACA,MAAMd,MAAM,GAAGc,QAAQ,CAACd,MAAM;MAC9B;MACA,IAAI,CAACiB,YAAY,CAACjB,MAAM,CAAC;IAC3B,CAAC,EACDkB,KAAK,IAAG;MACNH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CACF;EACL;EAEAD,YAAYA,CAACjB,MAAc;IACzB;IACA,IAAI,CAACH,WAAW,CAACsB,UAAU,CAACnB,MAAM,CAAC,CAACa,SAAS,CAC3CC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,QAAQ,CAAC;MACnD;MACA,IAAI,CAAChB,MAAM,CAACsB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC,EACDF,KAAK,IAAG;MACNH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CACF;EACH;CAED;AAhDYxB,iBAAiB,GAAA2B,UAAA,EAN7B7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EAEW9B,iBAAiB,CAgD7B;SAhDYA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}