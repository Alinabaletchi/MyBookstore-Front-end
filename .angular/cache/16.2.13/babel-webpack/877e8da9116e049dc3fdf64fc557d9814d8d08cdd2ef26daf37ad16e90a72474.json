{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { BookType } from 'src/app/interfaces/book';\nlet BooksComponent = class BooksComponent {\n  constructor(bookService, cartService) {\n    this.bookService = bookService;\n    this.cartService = cartService;\n    this.book = {\n      id: 0,\n      name: '',\n      bookType: BookType.ACADEMIC,\n      description: '',\n      price: 0,\n      quantity: 0,\n      image: ''\n    };\n    this.books = [];\n    this.bookTypeOptions = Object.values(BookType);\n    this.selectBookType = '';\n  }\n  ngOnInit() {\n    this.bookService.getAllBooks().subscribe(books => {\n      this.books = books;\n    }, error => {\n      console.error('Error retrieving books:', error);\n    });\n  }\n  addToCart(book) {\n    const cartId = 0;\n    const bookId = book.id;\n    this.cartService.addBookToCart(cartId, bookId).subscribe(response => {\n      console.log('Cart updated successfully:', response);\n    }, error => {\n      console.error('An error occurred while adding book to cart:', error);\n    });\n    // addToCart(book: Book): void {\n    //   // Presupunem că obții cartId-ul utilizatorului din altă sursă\n    //   const cartId: number | undefined = this.getCartIdFromSomeSource(); // Exemplu\n    //   if (!cartId) {\n    //     console.error('Cart ID is not available. Unable to add book to cart.');\n    //     return;\n    //   }\n    //   const bookId: number = book.id;\n    //   this.cartService.addBookToCart(cartId, bookId).subscribe(\n    //     response => {\n    //       console.log('Cart updated successfully:', response);\n    //     },\n    //     error => {\n    //       console.error('An error occurred while adding book to cart:', error);\n    //     }\n    //   );\n    // }\n    // getCartIdFromSomeSource(): number | undefined {\n    //   const cartId: number | undefined =  this.route.snapshot.queryParamMap.get('cartId');\n    //   return cartId;\n    // }\n  }\n\n  getBooksByType() {\n    this.bookService.getBooksByType(this.selectBookType).subscribe(response => {\n      this.books = response;\n    }, error => {\n      console.error('Error fetching books by type:', error);\n    });\n  }\n};\nBooksComponent = __decorate([Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.scss']\n})], BooksComponent);\nexport { BooksComponent };","map":{"version":3,"names":["Component","BookType","BooksComponent","constructor","bookService","cartService","book","id","name","bookType","ACADEMIC","description","price","quantity","image","books","bookTypeOptions","Object","values","selectBookType","ngOnInit","getAllBooks","subscribe","error","console","addToCart","cartId","bookId","addBookToCart","response","log","getBooksByType","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Alina\\Desktop\\library\\src\\app\\components\\books\\books.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Book, BookType } from 'src/app/interfaces/book';\nimport { BookService } from 'src/app/services/book/book.service';\nimport { CartService } from 'src/app/services/cart/cart.service';\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.scss']\n})\nexport class BooksComponent implements OnInit{\n  book: Book = {\n    id: 0,\n    name: '',\n    bookType: BookType.ACADEMIC,\n    description: '',\n    price: 0,\n    quantity: 0,\n    image: '' \n  };\n\n  books: Book[] = [];\n  bookTypeOptions: string[] = Object.values(BookType);\n  selectBookType: string= '';\n\n  constructor(private bookService: BookService, private cartService: CartService) {}\n\n  ngOnInit(): void {\n    this.bookService.getAllBooks().subscribe(\n      (books: Book[]) => {\n        this.books =books;\n      },\n      (error) => {\n        console.error('Error retrieving books:', error);\n      }\n    );\n  }\n\n\n  addToCart(book: Book): void {\n    const cartId: number=0;\n    const bookId:number=book.id;\n\n\n    this.cartService.addBookToCart(cartId, bookId).subscribe(\n      response => {\n        console.log('Cart updated successfully:', response);\n        \n      },\n      error => {\n        console.error('An error occurred while adding book to cart:', error);\n        \n      }\n    );\n\n  // addToCart(book: Book): void {\n  //   // Presupunem că obții cartId-ul utilizatorului din altă sursă\n  //   const cartId: number | undefined = this.getCartIdFromSomeSource(); // Exemplu\n  \n  //   if (!cartId) {\n  //     console.error('Cart ID is not available. Unable to add book to cart.');\n  //     return;\n  //   }\n  \n  //   const bookId: number = book.id;\n  \n  //   this.cartService.addBookToCart(cartId, bookId).subscribe(\n  //     response => {\n  //       console.log('Cart updated successfully:', response);\n  //     },\n  //     error => {\n  //       console.error('An error occurred while adding book to cart:', error);\n  //     }\n  //   );\n  // }\n  // getCartIdFromSomeSource(): number | undefined {\n\n  //   const cartId: number | undefined =  this.route.snapshot.queryParamMap.get('cartId');\n  //   return cartId;\n  // }\n  }\n\n  getBooksByType(): void {\n    this.bookService.getBooksByType(this.selectBookType).subscribe(\n      (response: Book[]) => {\n        this.books = response;\n      },\n      (error) => {\n        console.error('Error fetching books by type:', error);\n      }\n    );\n  }\n\n  \n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAeC,QAAQ,QAAQ,yBAAyB;AASxD,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAezBC,YAAoBC,WAAwB,EAAUC,WAAwB;IAA1D,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IAdjE,KAAAC,IAAI,GAAS;MACXC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAER,QAAQ,CAACS,QAAQ;MAC3BC,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE;KACR;IAED,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,eAAe,GAAaC,MAAM,CAACC,MAAM,CAACjB,QAAQ,CAAC;IACnD,KAAAkB,cAAc,GAAU,EAAE;EAEuD;EAEjFC,QAAQA,CAAA;IACN,IAAI,CAAChB,WAAW,CAACiB,WAAW,EAAE,CAACC,SAAS,CACrCP,KAAa,IAAI;MAChB,IAAI,CAACA,KAAK,GAAEA,KAAK;IACnB,CAAC,EACAQ,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CACF;EACH;EAGAE,SAASA,CAACnB,IAAU;IAClB,MAAMoB,MAAM,GAAS,CAAC;IACtB,MAAMC,MAAM,GAAQrB,IAAI,CAACC,EAAE;IAG3B,IAAI,CAACF,WAAW,CAACuB,aAAa,CAACF,MAAM,EAAEC,MAAM,CAAC,CAACL,SAAS,CACtDO,QAAQ,IAAG;MACTL,OAAO,CAACM,GAAG,CAAC,4BAA4B,EAAED,QAAQ,CAAC;IAErD,CAAC,EACDN,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;IAEtE,CAAC,CACF;IAEH;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;EACA;;EAEAQ,cAAcA,CAAA;IACZ,IAAI,CAAC3B,WAAW,CAAC2B,cAAc,CAAC,IAAI,CAACZ,cAAc,CAAC,CAACG,SAAS,CAC3DO,QAAgB,IAAI;MACnB,IAAI,CAACd,KAAK,GAAGc,QAAQ;IACvB,CAAC,EACAN,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CACF;EACH;CAGD;AApFYrB,cAAc,GAAA8B,UAAA,EAL1BhC,SAAS,CAAC;EACTiC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWjC,cAAc,CAoF1B;SApFYA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}