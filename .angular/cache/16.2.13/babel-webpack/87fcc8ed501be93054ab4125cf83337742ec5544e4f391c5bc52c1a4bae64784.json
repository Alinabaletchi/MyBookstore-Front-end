{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/game/game.service\";\nclass GamesComponent {\n  constructor(gameService) {\n    this.gameService = gameService;\n    this.games = [];\n  }\n  ngOnInit() {\n    this.gameService.getAllGames().subscribe(games => {\n      this.games = games;\n    }, error => {\n      console.error('Error retrieving games:', error);\n    });\n  }\n  static #_ = this.ɵfac = function GamesComponent_Factory(t) {\n    return new (t || GamesComponent)(i0.ɵɵdirectiveInject(i1.GameService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GamesComponent,\n    selectors: [[\"app-games\"]],\n    decls: 2,\n    vars: 0,\n    template: function GamesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"games works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { GamesComponent };","map":{"version":3,"names":["GamesComponent","constructor","gameService","games","ngOnInit","getAllGames","subscribe","error","console","_","i0","ɵɵdirectiveInject","i1","GameService","_2","selectors","decls","vars","template","GamesComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\Alina\\Desktop\\library\\src\\app\\components\\games\\games.component.ts","C:\\Users\\Alina\\Desktop\\library\\src\\app\\components\\games\\games.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Game } from 'src/app/interfaces/game';\nimport { GameService } from 'src/app/services/game/game.service';\n\n@Component({\n  selector: 'app-games',\n  templateUrl: './games.component.html',\n  styleUrls: ['./games.component.scss']\n})\nexport class GamesComponent implements OnInit {\n  \n  games: Game[] = [];\n\n  constructor(private gameService: GameService) { }\n\n  ngOnInit(): void {\n    this.gameService.getAllGames().subscribe(\n      (games: Game[]) => {\n        this.games = games;\n      },\n      (error) => {\n        console.error('Error retrieving games:', error);\n      }\n    );\n  }\n\n}\n","<p>games works!</p>\n\n\n<!-- <div *ngIf=\"games && games.length > 0\">\n    <h2>List of Games</h2>\n    <ul>\n      <li *ngFor=\"let game of games\">\n        <h3>{{ game.name }}</h3>\n        <p><strong>Description:</strong> {{ game.description }}</p>\n        <p><strong>Price:</strong> {{ game.price }}</p>\n        <p><strong>Aviable:</strong> {{ game.quantity }} <strong>pace</strong> </p>\n        <p><strong>Book Type:</strong> {{ game.gameType }}</p>\n      </li>\n    </ul>\n  </div>\n   -->\n"],"mappings":";;AAIA,MAKaA,cAAc;EAIzBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF/B,KAAAC,KAAK,GAAW,EAAE;EAE8B;EAEhDC,QAAQA,CAAA;IACN,IAAI,CAACF,WAAW,CAACG,WAAW,EAAE,CAACC,SAAS,CACrCH,KAAa,IAAI;MAChB,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,EACAI,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CACF;EACH;EAAC,QAAAE,CAAA,G;qBAfUT,cAAc,EAAAU,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdd,cAAc;IAAAe,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT3BV,EAAA,CAAAY,cAAA,QAAG;QAAAZ,EAAA,CAAAa,MAAA,mBAAY;QAAAb,EAAA,CAAAc,YAAA,EAAI;;;;;;SDSNxB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}