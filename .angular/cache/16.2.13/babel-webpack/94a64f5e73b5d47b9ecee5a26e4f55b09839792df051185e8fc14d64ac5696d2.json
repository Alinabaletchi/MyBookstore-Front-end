{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(loginService, cartService, router, au) {\n    this.loginService = loginService;\n    this.cartService = cartService;\n    this.router = router;\n    this.au = au;\n    this.user = {\n      email: '',\n      password: ''\n    }; // Define a user object for validation\n  }\n  // login() {\n  //   this.loginService.login(this.user.email, this.user.password).subscribe({\n  //     next: (response) => {\n  //       if (response.status === 200) {\n  //         console.log('Login successful');\n  //         this.router.navigate(['/home']); // Adjust as needed for your routing setup\n  //       } else {\n  //         console.error('Login failed');\n  //       }\n  //     },\n  //     error: (error) => {\n  //       console.error('Login failed', error);\n  //     }\n  //   });\n  // }\n  login() {\n    this.authService.login(this.user).subscribe({\n      next: response => {\n        console.log('Login successful');\n        this.router.navigate(['/home']); // Navigăm către pagina de home\n      },\n\n      error: error => {\n        console.error('Login failed', error);\n      }\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","LoginComponent","constructor","loginService","cartService","router","au","user","email","password","login","authService","subscribe","next","response","console","log","navigate","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Alina\\Desktop\\library\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\nimport { LoginData } from 'src/app/interfaces/login';\nimport { AuthServiceService } from 'src/app/services/authService/auth-service.service';\nimport { CartService } from 'src/app/services/cart/cart.service';\nimport { LoginService } from 'src/app/services/login/login.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n\n  user: LoginData = { email: '', password: '' }; // Define a user object for validation\n\n  constructor(private loginService: LoginService, private cartService:CartService, private router: Router, private au) { }\n\n \n  // login() {\n  //   this.loginService.login(this.user.email, this.user.password).subscribe({\n  //     next: (response) => {\n  //       if (response.status === 200) {\n  //         console.log('Login successful');\n  //         this.router.navigate(['/home']); // Adjust as needed for your routing setup\n  //       } else {\n  //         console.error('Login failed');\n  //       }\n  //     },\n  //     error: (error) => {\n  //       console.error('Login failed', error);\n  //     }\n  //   });\n  // }\n  login() {\n    this.authService.login(this.user).subscribe({\n      next: (response) => {\n        console.log('Login successful');\n        this.router.navigate(['/home']);  // Navigăm către pagina de home\n      },\n      error: (error) => {\n        console.error('Login failed', error);\n      }\n    });\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AAczC,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAIzBC,YAAoBC,YAA0B,EAAUC,WAAuB,EAAUC,MAAc,EAAUC,EAAE;IAA/F,KAAAH,YAAY,GAAZA,YAAY;IAAwB,KAAAC,WAAW,GAAXA,WAAW;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,EAAE,GAAFA,EAAE;IAFnH,KAAAC,IAAI,GAAc;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAE,CAAC,CAAC;EAEwE;EAGvH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAKA,CAAA;IACH,IAAI,CAACC,WAAW,CAACD,KAAK,CAAC,IAAI,CAACH,IAAI,CAAC,CAACK,SAAS,CAAC;MAC1CC,IAAI,EAAGC,QAAQ,IAAI;QACjBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QAC/B,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAE;MACpC,CAAC;;MACDC,KAAK,EAAGA,KAAK,IAAI;QACfH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC;KACD,CAAC;EACN;CAAC;AAhCYjB,cAAc,GAAAkB,UAAA,EAL1BnB,SAAS,CAAC;EACToB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWrB,cAAc,CAgC1B;SAhCYA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}