{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.user = {\n      email: '',\n      password: ''\n    };\n  }\n  onSubmit() {\n    this.authService.login(this.loginData).subscribe(response => {\n      // Logică pentru gestionarea răspunsului de la server (de exemplu, redirecționare către altă pagină)\n    }, error => {\n      // Logică pentru gestionarea erorii de la server (de exemplu, afișarea unui mesaj de eroare pentru utilizator)\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","LoginComponent","constructor","authService","user","email","password","onSubmit","login","loginData","subscribe","response","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Alina\\Desktop\\library\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\nimport { LoginData } from 'src/app/interfaces/login';\nimport { LoginService } from 'src/app/services/login/login.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  \n\n  user: LoginData = {\n    email: '',\n    password: ''\n  };\n\n  constructor(private authService: AuthService) { }\n\n  onSubmit(): void {\n    this.authService.login(this.loginData).subscribe(\n      response => {\n        // Logică pentru gestionarea răspunsului de la server (de exemplu, redirecționare către altă pagină)\n      },\n      error => {\n        // Logică pentru gestionarea erorii de la server (de exemplu, afișarea unui mesaj de eroare pentru utilizator)\n      }\n    );\n  }\n}"],"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AAYzC,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAQzBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAL/B,KAAAC,IAAI,GAAc;MAChBC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX;EAE+C;EAEhDC,QAAQA,CAAA;IACN,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC,IAAI,CAACC,SAAS,CAAC,CAACC,SAAS,CAC9CC,QAAQ,IAAG;MACT;IAAA,CACD,EACDC,KAAK,IAAG;MACN;IAAA,CACD,CACF;EACH;CACD;AApBYX,cAAc,GAAAY,UAAA,EAL1Bb,SAAS,CAAC;EACTc,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWf,cAAc,CAoB1B;SApBYA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}