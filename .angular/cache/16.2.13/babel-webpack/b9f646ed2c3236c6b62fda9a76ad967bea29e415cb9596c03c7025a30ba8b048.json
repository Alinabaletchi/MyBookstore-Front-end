{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { BookType } from 'src/app/interfaces/book';\nlet BooksComponent = class BooksComponent {\n  constructor(bookService, cartService, wishlistServie, router) {\n    this.bookService = bookService;\n    this.cartService = cartService;\n    this.wishlistServie = wishlistServie;\n    this.router = router;\n    this.books = [];\n    this.bookTypeOptions = Object.values(BookType);\n    this.selectBookType = '';\n    this.cartId = null;\n    this.wishlistId = null;\n  }\n  ngOnInit() {\n    this.bookService.getAllBooks().subscribe(books => {\n      this.books = books;\n    }, error => {\n      console.error('Error retrieving books:', error);\n    });\n    this.cartService.getMyCart().subscribe(cart => {\n      this.cartId = cart.id;\n    }, error => {\n      console.error('Error fetching cart', error);\n    });\n    this.wishlistServie.getMyWishlist().subscribe(wishlist => {\n      this.wishlistId = wishlist.id;\n    }, error => {\n      console.error('Error fetching wishlist', error);\n    });\n  }\n  addToCart(book) {\n    if (this.cartId === null) {\n      console.error('Cart ID is not available. Unable to add book to cart.');\n      return;\n    }\n    const bookId = book.id;\n    this.cartService.addBookToCart(this.cartId, bookId).subscribe(response => {\n      console.log('Cart updated successfully:', response);\n      this.router.navigate(['/cart']);\n    }, error => {\n      console.error('An error occurred while adding book to cart:', error);\n    });\n  }\n  addToWislist(book) {\n    if (this.wishlistId === null) {\n      console.error('Cart ID is not available. Unable to add book to wishlist.');\n      return;\n    }\n    const bookId = book.id;\n    this.wishlistServie.addBookToWishlist(this.wishlistId, bookId).subscribe(response => {\n      console.log('Wishlist updated successfully:', response);\n      this.router.navigate(['/wishlist']);\n    }, error => {\n      console.error('An error occurred while adding book to wishlist:', error);\n    });\n  }\n};\nBooksComponent = __decorate([Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.scss']\n})], BooksComponent);\nexport { BooksComponent };\n// book: Book = {\n//   id: 0,\n//   name: '',\n//   bookType: BookType.ACADEMIC,\n//   description: '',\n//   price: 0,\n//   quantity: 0,\n//   image: '' \n// };\n// books: Book[] = [];\n// bookTypeOptions: string[] = Object.values(BookType);\n// selectBookType: string= '';\n// constructor(private bookService: BookService, private cartService: CartService, private router: Router) {}\n// ngOnInit(): void {\n//   this.bookService.getAllBooks().subscribe(\n//     (books: Book[]) => {\n//       this.books =books;\n//     },\n//     (error) => {\n//       console.error('Error retrieving books:', error);\n//     }\n//   );\n// }\n// addToCart(book: Book): void {\n//   const cartId: number=0;\n//   const bookId:number=book.id;\n//   this.cartService.addBookToCart(cartId, bookId).subscribe(\n//     response => {\n//       console.log('Cart updated successfully:', response);\n//       this.router.navigate(['/cart']);\n//     },\n//     error => {\n//       console.error('An error occurred while adding book to cart:', error);\n//     }\n//   );\n// addToCart(book: Book): void {\n//   // Presupunem că obții cartId-ul utilizatorului din altă sursă\n//   const cartId: number | undefined = this.getCartIdFromSomeSource(); // Exemplu\n//   if (!cartId) {\n//     console.error('Cart ID is not available. Unable to add book to cart.');\n//     return;\n//   }\n//   const bookId: number = book.id;\n//   this.cartService.addBookToCart(cartId, bookId).subscribe(\n//     response => {\n//       console.log('Cart updated successfully:', response);\n//     },\n//     error => {\n//       console.error('An error occurred while adding book to cart:', error);\n//     }\n//   );\n// }\n// getCartIdFromSomeSource(): number | undefined {\n//   const cartId: number | undefined =  this.route.snapshot.queryParamMap.get('cartId');\n//   return cartId;\n// }\n//   }\n//   getBooksByType(): void {\n//     this.bookService.getBooksByType(this.selectBookType).subscribe(\n//       (response: Book[]) => {\n//         this.books = response;\n//       },\n//       (error) => {\n//         console.error('Error fetching books by type:', error);\n//       }\n//     );\n//   }\n// }","map":{"version":3,"names":["Component","BookType","BooksComponent","constructor","bookService","cartService","wishlistServie","router","books","bookTypeOptions","Object","values","selectBookType","cartId","wishlistId","ngOnInit","getAllBooks","subscribe","error","console","getMyCart","cart","id","getMyWishlist","wishlist","addToCart","book","bookId","addBookToCart","response","log","navigate","addToWislist","addBookToWishlist","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Alina\\Desktop\\library\\src\\app\\components\\books\\books.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Book, BookType } from 'src/app/interfaces/book';\nimport { BookService } from 'src/app/services/book/book.service';\nimport { CartService } from 'src/app/services/cart/cart.service';\nimport { WishlistService } from 'src/app/services/wishlist/wishlist.service';\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.scss']\n})\nexport class BooksComponent implements OnInit{\n\n  books: Book[] = [];\n  bookTypeOptions: string[] = Object.values(BookType);\n  selectBookType: string = '';\n  cartId: number | null = null;\n  wishlistId: number | null = null;\n  \n\n  constructor(\n    private bookService: BookService,\n    private cartService: CartService,\n    private wishlistServie: WishlistService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.bookService.getAllBooks().subscribe(\n      (books: Book[]) => {\n        this.books = books;\n      },\n      (error) => {\n        console.error('Error retrieving books:', error);\n      }\n    );\n\n    this.cartService.getMyCart().subscribe(\n      (cart) => {\n        this.cartId = cart.id;\n      },\n      (error) => {\n        console.error('Error fetching cart', error);\n      }\n    );\n\n    this.wishlistServie.getMyWishlist().subscribe(\n      (wishlist) => {\n        this.wishlistId = wishlist.id;\n      },\n      (error) => {\n        console.error('Error fetching wishlist', error);\n      }\n    );\n  }\n\n  addToCart(book: Book): void {\n    if (this.cartId === null) {\n      console.error('Cart ID is not available. Unable to add book to cart.');\n      return;\n    }\n\n    const bookId: number = book.id;\n\n    this.cartService.addBookToCart(this.cartId, bookId).subscribe(\n      response => {\n        console.log('Cart updated successfully:', response);\n        this.router.navigate(['/cart']);\n      },\n      error => {\n        console.error('An error occurred while adding book to cart:', error);\n      }\n    );\n  }\n\n  addToWislist(book: Book): void {\n    if (this.wishlistId === null) {\n      console.error('Cart ID is not available. Unable to add book to wishlist.');\n      return;\n    }\n\n    const bookId: number = book.id;\n\n    this.wishlistServie.addBookToWishlist(this.wishlistId, bookId).subscribe(\n      response => {\n        console.log('Wishlist updated successfully:', response);\n        this.router.navigate(['/wishlist']);\n      },\n      error => {\n        console.error('An error occurred while adding book to wishlist:', error);\n      }\n    );\n  }\n}\n  // book: Book = {\n  //   id: 0,\n  //   name: '',\n  //   bookType: BookType.ACADEMIC,\n  //   description: '',\n  //   price: 0,\n  //   quantity: 0,\n  //   image: '' \n  // };\n\n  // books: Book[] = [];\n  // bookTypeOptions: string[] = Object.values(BookType);\n  // selectBookType: string= '';\n\n  // constructor(private bookService: BookService, private cartService: CartService, private router: Router) {}\n\n  // ngOnInit(): void {\n  //   this.bookService.getAllBooks().subscribe(\n  //     (books: Book[]) => {\n  //       this.books =books;\n  //     },\n  //     (error) => {\n  //       console.error('Error retrieving books:', error);\n  //     }\n  //   );\n  // }\n\n\n  // addToCart(book: Book): void {\n  //   const cartId: number=0;\n  //   const bookId:number=book.id;\n\n\n  //   this.cartService.addBookToCart(cartId, bookId).subscribe(\n  //     response => {\n  //       console.log('Cart updated successfully:', response);\n  //       this.router.navigate(['/cart']);\n        \n  //     },\n  //     error => {\n  //       console.error('An error occurred while adding book to cart:', error);\n        \n  //     }\n  //   );\n\n  // addToCart(book: Book): void {\n  //   // Presupunem că obții cartId-ul utilizatorului din altă sursă\n  //   const cartId: number | undefined = this.getCartIdFromSomeSource(); // Exemplu\n  \n  //   if (!cartId) {\n  //     console.error('Cart ID is not available. Unable to add book to cart.');\n  //     return;\n  //   }\n  \n  //   const bookId: number = book.id;\n  \n  //   this.cartService.addBookToCart(cartId, bookId).subscribe(\n  //     response => {\n  //       console.log('Cart updated successfully:', response);\n  //     },\n  //     error => {\n  //       console.error('An error occurred while adding book to cart:', error);\n  //     }\n  //   );\n  // }\n  // getCartIdFromSomeSource(): number | undefined {\n\n  //   const cartId: number | undefined =  this.route.snapshot.queryParamMap.get('cartId');\n  //   return cartId;\n  // }\n//   }\n\n//   getBooksByType(): void {\n//     this.bookService.getBooksByType(this.selectBookType).subscribe(\n//       (response: Book[]) => {\n//         this.books = response;\n//       },\n//       (error) => {\n//         console.error('Error fetching books by type:', error);\n//       }\n//     );\n//   }\n\n  \n// }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}