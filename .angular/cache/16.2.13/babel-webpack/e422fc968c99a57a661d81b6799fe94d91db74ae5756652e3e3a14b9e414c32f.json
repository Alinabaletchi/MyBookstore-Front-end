{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/register/register.service\";\nclass RegisterComponent {\n  constructor(registerService) {\n    this.registerService = registerService;\n  }\n  onSubmit(user) {\n    this.registerService.registerUser(user).subscribe(response => {\n      console.log(response); // Gestionarea răspunsului de la server\n    }, error => {\n      console.error(error); // Gestionarea erorilor\n    });\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.RegisterService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 13,\n    vars: 2,\n    consts: [[1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"register works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\")(3, \"div\", 0)(4, \"label\", 1);\n        i0.ɵɵtext(5, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.user.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 0)(8, \"label\", 3);\n        i0.ɵɵtext(9, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.user.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_11_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵtext(12, \"Register\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { RegisterComponent };","map":{"version":3,"names":["RegisterComponent","constructor","registerService","onSubmit","user","registerUser","subscribe","response","console","log","error","_","i0","ɵɵdirectiveInject","i1","RegisterService","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterComponent_Template_input_ngModelChange_6_listener","$event","username","RegisterComponent_Template_input_ngModelChange_10_listener","email","RegisterComponent_Template_button_click_11_listener","register","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Alina\\Desktop\\library\\src\\app\\components\\register\\register.component.ts","C:\\Users\\Alina\\Desktop\\library\\src\\app\\components\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { RegisterService } from 'src/app/services/register/register.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n\n  constructor(private registerService: RegisterService) { }\n\n  onSubmit(user: any): void {\n    this.registerService.registerUser(user)\n      .subscribe(\n        response => {\n          console.log(response); // Gestionarea răspunsului de la server\n        },\n        error => {\n          console.error(error); // Gestionarea erorilor\n        }\n      );\n  }\n\n}\n","<p>register works!</p>\n<form>\n    <div class=\"form-group\">\n      <label for=\"username\">Username</label>\n      <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" [(ngModel)]=\"user.username\" required>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"email\">Email</label>\n      <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" [(ngModel)]=\"user.email\" required>\n    </div>\n    <!-- Alte câmpuri de înregistrare -->\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"register()\">Register</button>\n  </form>\n  \n"],"mappings":";;AAGA,MAKaA,iBAAiB;EAE5BC,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;EAAqB;EAExDC,QAAQA,CAACC,IAAS;IAChB,IAAI,CAACF,eAAe,CAACG,YAAY,CAACD,IAAI,CAAC,CACpCE,SAAS,CACRC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CAAC,CAAC;IACzB,CAAC,EACDG,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;IACxB,CAAC,CACF;EACL;EAAC,QAAAC,CAAA,G;qBAdUX,iBAAiB,EAAAY,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,eAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBhB,iBAAiB;IAAAiB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR9BX,EAAA,CAAAa,cAAA,QAAG;QAAAb,EAAA,CAAAc,MAAA,sBAAe;QAAAd,EAAA,CAAAe,YAAA,EAAI;QACtBf,EAAA,CAAAa,cAAA,WAAM;QAEsBb,EAAA,CAAAc,MAAA,eAAQ;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACtCf,EAAA,CAAAa,cAAA,eAA2G;QAArCb,EAAA,CAAAgB,UAAA,2BAAAC,0DAAAC,MAAA;UAAA,OAAAN,GAAA,CAAApB,IAAA,CAAA2B,QAAA,GAAAD,MAAA;QAAA,EAA2B;QAAjGlB,EAAA,CAAAe,YAAA,EAA2G;QAE7Gf,EAAA,CAAAa,cAAA,aAAwB;QACHb,EAAA,CAAAc,MAAA,YAAK;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QAChCf,EAAA,CAAAa,cAAA,gBAAmG;QAAlCb,EAAA,CAAAgB,UAAA,2BAAAI,2DAAAF,MAAA;UAAA,OAAAN,GAAA,CAAApB,IAAA,CAAA6B,KAAA,GAAAH,MAAA;QAAA,EAAwB;QAAzFlB,EAAA,CAAAe,YAAA,EAAmG;QAGrGf,EAAA,CAAAa,cAAA,iBAAmE;QAArBb,EAAA,CAAAgB,UAAA,mBAAAM,oDAAA;UAAA,OAASV,GAAA,CAAAW,QAAA,EAAU;QAAA,EAAC;QAACvB,EAAA,CAAAc,MAAA,gBAAQ;QAAAd,EAAA,CAAAe,YAAA,EAAS;;;QAPZf,EAAA,CAAAwB,SAAA,GAA2B;QAA3BxB,EAAA,CAAAyB,UAAA,YAAAb,GAAA,CAAApB,IAAA,CAAA2B,QAAA,CAA2B;QAIhCnB,EAAA,CAAAwB,SAAA,GAAwB;QAAxBxB,EAAA,CAAAyB,UAAA,YAAAb,GAAA,CAAApB,IAAA,CAAA6B,KAAA,CAAwB;;;;;;SDAlFjC,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}