{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/register/register.service\";\nclass RegisterComponent {\n  constructor(registerService) {\n    this.registerService = registerService;\n  }\n  onSubmit(user) {\n    this.registerService.registerUser(user).subscribe(response => {\n      console.log(response); // Gestionarea răspunsului de la server\n    }, error => {\n      console.error(error); // Gestionarea erorilor\n    });\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.RegisterService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 16,\n    vars: 0,\n    consts: [[\"formGroupName\", \"address\"], [\"for\", \"street\"], [\"id\", \"street\", \"type\", \"text\", \"formControlName\", \"street\"], [\"for\", \"city\"], [\"id\", \"city\", \"type\", \"text\", \"formControlName\", \"city\"], [\"for\", \"state\"], [\"id\", \"state\", \"type\", \"text\", \"formControlName\", \"state\"], [\"for\", \"zip\"], [\"id\", \"zip\", \"type\", \"text\", \"formControlName\", \"zip\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"p\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"h2\");\n        i0.ɵɵtext(3, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"label\", 1);\n        i0.ɵɵtext(5, \"Street: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 2);\n        i0.ɵɵelementStart(7, \"label\", 3);\n        i0.ɵɵtext(8, \"City: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 4);\n        i0.ɵɵelementStart(10, \"label\", 5);\n        i0.ɵɵtext(11, \"State: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵelementStart(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Zip Code: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { RegisterComponent };","map":{"version":3,"names":["RegisterComponent","constructor","registerService","onSubmit","user","registerUser","subscribe","response","console","log","error","_","i0","ɵɵdirectiveInject","i1","RegisterService","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\Alina\\Desktop\\library\\src\\app\\components\\register\\register.component.ts","C:\\Users\\Alina\\Desktop\\library\\src\\app\\components\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { RegisterService } from 'src/app/services/register/register.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n\n  constructor(private registerService: RegisterService) { }\n\n  onSubmit(user: any): void {\n    this.registerService.registerUser(user)\n      .subscribe(\n        response => {\n          console.log(response); // Gestionarea răspunsului de la server\n        },\n        error => {\n          console.error(error); // Gestionarea erorilor\n        }\n      );\n  }\n\n}\n","<p></p>\n\n<div formGroupName=\"address\">\n    <h2>Address</h2>\n  \n    <label for=\"street\">Street: </label>\n    <input id=\"street\" type=\"text\" formControlName=\"street\">\n  \n    <label for=\"city\">City: </label>\n    <input id=\"city\" type=\"text\" formControlName=\"city\">\n  \n    <label for=\"state\">State: </label>\n    <input id=\"state\" type=\"text\" formControlName=\"state\">\n  \n    <label for=\"zip\">Zip Code: </label>\n    <input id=\"zip\" type=\"text\" formControlName=\"zip\">\n  </div>\n"],"mappings":";;AAGA,MAKaA,iBAAiB;EAE5BC,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;EAAqB;EAExDC,QAAQA,CAACC,IAAS;IAChB,IAAI,CAACF,eAAe,CAACG,YAAY,CAACD,IAAI,CAAC,CACpCE,SAAS,CACRC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CAAC,CAAC;IACzB,CAAC,EACDG,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;IACxB,CAAC,CACF;EACL;EAAC,QAAAC,CAAA,G;qBAdUX,iBAAiB,EAAAY,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,eAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBhB,iBAAiB;IAAAiB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR9BX,EAAA,CAAAa,SAAA,QAAO;QAEPb,EAAA,CAAAc,cAAA,aAA6B;QACrBd,EAAA,CAAAe,MAAA,cAAO;QAAAf,EAAA,CAAAgB,YAAA,EAAK;QAEhBhB,EAAA,CAAAc,cAAA,eAAoB;QAAAd,EAAA,CAAAe,MAAA,eAAQ;QAAAf,EAAA,CAAAgB,YAAA,EAAQ;QACpChB,EAAA,CAAAa,SAAA,eAAwD;QAExDb,EAAA,CAAAc,cAAA,eAAkB;QAAAd,EAAA,CAAAe,MAAA,aAAM;QAAAf,EAAA,CAAAgB,YAAA,EAAQ;QAChChB,EAAA,CAAAa,SAAA,eAAoD;QAEpDb,EAAA,CAAAc,cAAA,gBAAmB;QAAAd,EAAA,CAAAe,MAAA,eAAO;QAAAf,EAAA,CAAAgB,YAAA,EAAQ;QAClChB,EAAA,CAAAa,SAAA,gBAAsD;QAEtDb,EAAA,CAAAc,cAAA,gBAAiB;QAAAd,EAAA,CAAAe,MAAA,kBAAU;QAAAf,EAAA,CAAAgB,YAAA,EAAQ;QACnChB,EAAA,CAAAa,SAAA,gBAAkD;QACpDb,EAAA,CAAAgB,YAAA,EAAM;;;;;;SDRK5B,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}