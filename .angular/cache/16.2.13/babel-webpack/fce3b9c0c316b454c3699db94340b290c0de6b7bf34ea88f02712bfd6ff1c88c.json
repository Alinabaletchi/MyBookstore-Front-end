{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { UserRole } from 'src/app/interfaces/user';\nlet RegisterComponent = class RegisterComponent {\n  constructor(registerService, user) {\n    this.registerService = registerService;\n    this.user = user;\n    this.user = {\n      id: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      role: UserRole.ADMIN\n    };\n  }\n  onSubmit(user) {\n    this.registerService.registerUser(user).subscribe(response => {\n      console.log(response); // Gestionarea răspunsului de la server\n    }, error => {\n      console.error(error); // Gestionarea erorilor\n    });\n  }\n};\n\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"names":["Component","UserRole","RegisterComponent","constructor","registerService","user","id","firstName","lastName","email","password","role","ADMIN","onSubmit","registerUser","subscribe","response","console","log","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Alina\\Desktop\\library\\src\\app\\components\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { RegisterService } from 'src/app/services/register/register.service';\nimport { User, UserRole } from 'src/app/interfaces/user';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\n\nexport class RegisterComponent {\n\n   \n    user: User = {\n      id: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    role:UserRole.ADMIN\n  };\n\n  constructor(private registerService: RegisterService, private user:User) { }\n\n  onSubmit(user: any): void {\n    this.registerService.registerUser(user)\n      .subscribe(\n        response => {\n          console.log(response); // Gestionarea răspunsului de la server\n        },\n        error => {\n          console.error(error); // Gestionarea erorilor\n        }\n      );\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAAeC,QAAQ,QAAQ,yBAAyB;AAQxD,IAAaC,iBAAiB,GAA9B,MAAaA,iBAAiB;EAY5BC,YAAoBC,eAAgC,EAAUC,IAAS;IAAnD,KAAAD,eAAe,GAAfA,eAAe;IAA2B,KAAAC,IAAI,GAAJA,IAAI;IAThE,KAAAA,IAAI,GAAS;MACXC,EAAE,EAAE,EAAE;MACRC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAACV,QAAQ,CAACW;KACf;EAE0E;EAE3EC,QAAQA,CAACR,IAAS;IAChB,IAAI,CAACD,eAAe,CAACU,YAAY,CAACT,IAAI,CAAC,CACpCU,SAAS,CACRC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CAAC,CAAC;IACzB,CAAC,EACDG,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;IACxB,CAAC,CACF;EACL;CAED;;AA1BYjB,iBAAiB,GAAAkB,UAAA,EAN7BpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EAEWrB,iBAAiB,CA0B7B;SA1BYA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}